apply plugin: RetrolambdaDeps

retrolambda {
    def jdkHome = 'JAVA7_HOME'
    def oldJdkHome = 'JAVA8_HOME'
    if (System.getenv(jdkHome) == null || System.getenv(oldJdkHome) == null) {
        logger.warn("$jdkHome or $oldJdkHome enviromental variable not found. " +
                'Please set them. Retrolambda may fail without them.')
    }
    jdk System.getenv("JAVA8_HOME")
    oldJdk System.getenv("JAVA7_HOME")
    javaVersion JavaVersion.VERSION_1_7
}

public final class RetrolambdaDeps implements Plugin<Project>{

    @Override
    void apply(Project project) {
        addDependencies(project)
        applyPlugins(project)
    }

    private void addDependencies(Project project) {
        project.afterEvaluate {
            def pd = project.dependencies
            pd.add('retrolambdaConfig', 'net.orfjackal.retrolambda:retrolambda:2.1.0')
        }
    }

    private void applyPlugins(Project project) {
        project.configure(project) {
            apply plugin: 'me.tatarka.retrolambda'
        }
    }
}