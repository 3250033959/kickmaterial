apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: "jacoco"
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'propdeps'
//apply plugin: 'com.android.databinding'

compileJava {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
    def jdkHome = System.getenv()['JAVA7_HOME']
    options.bootClasspath = (new File(jdkHome, "/jre/lib/rt.jar")).canonicalPath
}


buildscript {
    repositories {
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath 'net.saliman:gradle-cobertura-plugin:2.0.0' // cobertura plugin
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1'
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.6'
    }
}

repositories {
    mavenCentral()
    // For snapshots of event callback and spock testing
    maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    provided 'com.google.android:android:4.1.1.4'
    provided 'com.google.code.gson:gson:2.3.1'
    compile 'com.google.code.findbugs:jsr305:3.0.0'

    compile 'joda-time:joda-time:2.7'
    compile 'org.joda:joda-convert:1.4'
    compile 'org.parceler:parceler-api:0.2.16'
    provided 'org.parceler:parceler:0.2.16'
    compile 'com.jakewharton.timber:timber:2.7.1'
    provided 'com.google.auto.value:auto-value:1.1'

    provided 'com.google.code.findbugs:findbugs:3.0.0'
    provided 'com.android.databinding:baseLibrary:1.0-rc2'
    compile 'com.byoutline.cachedfield:cachedfield:1.5.0'


    testCompile 'junit:junit:4.12'
    // For spock testing:
    testCompile 'org.codehaus.groovy:groovy-all:2.4.1'
    testCompile group: 'junit', name: 'junit', version: '4.10'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testRuntime "cglib:cglib-nodep:2.2.2"
    // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:1.2"
    // allows mocking of classes without default constructor (together with CGLIB)
}

jacocoTestReport {
    reports {
        xml.enabled true // coveralls plugin depends on xml format report
        html.enabled = true
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}
